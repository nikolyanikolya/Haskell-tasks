{-}
Реализуйте класс SafeEnum
обе функции которого ведут себя как succ и pred стандартного класса Enum, 
однако являются тотальными, то есть 
не останавливаются с ошибкой на наибольшем и наименьшем значениях типа-перечисления 
соответственно, а обеспечивают циклическое поведение. Ваш класс должен быть 
расширением ряда классов типов стандартной библиотеки, так чтобы можно было 
написать реализацию по умолчанию его методов, позволяющую объявлять его 
представителей без необходимости писать какой бы то ни было код. 
Например, для типа Bool должно быть достаточно написать строку
-}
instance SafeEnum Bool
class (Eq a, Enum a, Bounded a) => SafeEnum a where
  ssucc ::  a -> a
  ssucc x  | x == maxBound =  minBound
           | otherwise = succ x 

  spred :: a -> a
  spred x  | x == minBound =  maxBound
           | otherwise = pred x 